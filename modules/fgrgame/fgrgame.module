<?php

/**
 * @file
 * A block module that displays recent blog and forum posts.
 */
function fgrgame_help($path, $arg) {
  switch ($path) {
    case "admin/help#fgrgame":
      return '' . t("Displays fgr games") . '';
      break;
  }
}

/**
 * Implements hook_node_info().
 */
function fgrgame_node_info() {
  $items = array(
      'fgrgame' => array(
          'name' => t('FGR game'),
          'base' => 'node_content',
          'description' => t('Displays FGR game.'),
          'help' => 'Displays FGR game.',
      ),
  );
  return $items;
}

/**
 * Implements hook_node_view().
 */
function fgrgame_node_view($node, $view_mode, $langcode)
{
    module_load_include('inc', 'fgrgame', 'fgrgame.api');
    module_load_include('inc', 'fgrtournament', 'fgrtournament.api');
    switch ($node->type) {
        case 'fgrgame':
            $crumbs = array();
            if(isset($_GET['crumbs'])) {
                $crumbs_buff = explode(';', $_GET['crumbs']);
                foreach($crumbs_buff as $crumb) {
                    $buff = explode(':', $crumb);
                    array_push($crumbs, array(
                        'title' => $buff[0],
                        'ref' => $buff[1]
                    ));
                }
            }
            if(isset($_GET['game_id'])) {
                $team_node_id = get_fgrteam_node_id();
                $game_id = $_GET['game_id'];
                $game_data = get_game_by_id($game_id);
                $tournament_id = $game_data['CompId'];
                $tournament_full_name = get_tournament_full_name($tournament_id);
                $tournament_metadata = array(
                    'TournamentFullName' => $tournament_full_name,
                    'TournamentId' => $tournament_id
                );
                $game_data['TournamentMetaData'] = $tournament_metadata;
                switch ($game_data['Game']['GameStatusId']) {
                    case 0:
                        $node->content['fgrgame_before'] = array(
                            "#markup" => theme('fgrgame_before', array('game' => $game_data, 'node' => $node, 'team_node_id' => $team_node_id['nid'], 'crumbs' => $crumbs))
                        );
                        break;
                    case 2:
                        $node->content['fgrgame_current'] = array(
                            "#markup" => theme('fgrgame_current', array('game' => $game_data, 'node' => $node, 'team_node_id' => $team_node_id['nid'], 'crumbs' => $crumbs))
                        );
                        break;
                    case 1:
                        drupal_add_js(drupal_get_path('module', 'fgrteam') . '/js/jquery-ui.min.js');
                        $node->content['fgrgame_ended'] = array(
                            "#markup" => theme('fgrgame_ended', array('game' => $game_data, 'node' => $node, 'team_node_id' => $team_node_id['nid'], 'crumbs' => $crumbs))
                        );
                        break;
                }
            }
            break;
    }
}

/**
 * Implements hook_theme();
*/
function fgrgame_theme() {
    return array(
        'fgrgame_before' => array(
            'variables' => array('game' => NULL, 'node' => NULL, 'team_node_id' => NULL, 'crumbs' => NULL),
            'template' => 'templates/fgrgame-before',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_current' => array(
            'variables' => array('game' => NULL, 'node' => NULL, 'team_node_id' => NULL, 'crumbs' => NULL),
            'template' => 'templates/fgrgame-current',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_ended' => array(
            'variables' => array('game' => NULL, 'node' => NULL, 'team_node_id' => NULL, 'crumbs' => NULL),
            'template' => 'templates/fgrgame-ended',
            'file' => 'fgrgame.pages.inc',
        )
    );
}