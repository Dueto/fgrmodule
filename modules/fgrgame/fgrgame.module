<?php

/**
 * @file
 * A block module that displays recent blog and forum posts.
 */
function fgrgame_help($path, $arg) {
  switch ($path) {
    case "admin/help#fgrgame":
      return '' . t("Displays fgr games") . '';
      break;
  }
}

/**
 * Implements hook_node_info().
 */
function fgrgame_node_info() {
  $items = array(
      'fgrgame' => array(
          'name' => t('FGR game'),
          'base' => 'node_content',
          'description' => t('Displays FGR game.'),
          'help' => 'Displays FGR game.',
      ),
  );
  return $items;
}

/**
 * Implements hook_node_view().
 */
function fgrgame_node_view($node, $view_mode, $langcode)
{
    module_load_include('inc', 'fgrgame', 'fgrgame.api');
    module_load_include('inc', 'fgrtournament', 'fgrtournament.api');
    switch ($node->type) {
        case 'fgrgame':
            $crumbs = array();
            if(isset($_GET['crumbs'])) {
                $crumbs_buff = explode(';', $_GET['crumbs']);
                foreach($crumbs_buff as $crumb) {
                    $buff = explode(':', $crumb);
                    array_push($crumbs, array(
                        'title' => $buff[0],
                        'ref' => $buff[1]
                    ));
                }
            }
            if(isset($_GET['game_id'])) {
                $team_node_id = get_fgrteam_node_id();

                //Get games data
                $game_id = $_GET['game_id'];
                $game_data = get_game_by_id2($game_id);

                //Get tournament data
                $tournament_metadata = form_tournament_metadata($game_data);
                $game_data['TournamentMetaData'] = $tournament_metadata;

                //Define which tab should be presented
                $tab_type = 'info';
                if(isset($_GET['tab_type'])) {
                    $tab_type = $_GET['tab_type'];
                }
                $tab_markup = form_tab_markup($node, $tab_type, $game_id, $team_node_id);

                //Define which view should be produced
                switch ($game_data['status']) {
                    case 'scheduled':
                        $node->content['fgrgame_before'] = array(
                            "#markup" => (theme('fgrgame_before', array('game' => $game_data, 'node' => $node, 'team_node_id' => $team_node_id['nid'], 'crumbs' => $crumbs)) . $tab_markup)
                        );
                        break;
                    case 'online':
                        $node->content['fgrgame_current'] = array(
                            "#markup" => (theme('fgrgame_current', array('game' => $game_data, 'node' => $node, 'team_node_id' => $team_node_id['nid'], 'crumbs' => $crumbs)) . $tab_markup)
                        );
                        break;
                    case 'result':
                        $node->content['fgrgame_ended'] = array(
                            "#markup" => (theme('fgrgame_ended', array('game' => $game_data, 'node' => $node, 'team_node_id' => $team_node_id['nid'], 'crumbs' => $crumbs)) . $tab_markup)
                        );
                        break;
                }
            }
            break;
    }
}

/**
 * @param $game_data
 * @return array
 */
function form_tournament_metadata($game_data)
{
    $tournament_id = $game_data['CompId'];
    $tournament_full_name = get_tournament_metadata($tournament_id);
    $tournament_metadata = array(
        'TournamentFullName' => $tournament_full_name,
        'TournamentId' => $tournament_id
    );
    return $tournament_metadata;
}

/**
 * @param $node
 * @param $tab_type
 * @param $game_id
 * @param $team_node_id
 * @return string html markup
 * @throws Exception
 */
function form_tab_markup($node, $tab_type, $game_id, $team_node_id)
{
    $tab_markup = '';
    switch ($tab_type) {
        case 'info':
            $game_info = get_game_info_by_id($game_id);
            $game_info['game_id'] = $game_id;
            $tab_markup = theme('fgrgame_info', array('game_info' => $game_info, 'node' => $node, 'team_node_id' => $team_node_id['nid']));
            break;
        case 'statistics':
            $game_statistics = get_game_statistics_by_id($game_id);
            $game_statistics['game_id'] = $game_id;
            $tab_markup = theme('fgrgame_statistics', array('game_statistics' => $game_statistics, 'node' => $node, 'team_node_id' => $team_node_id['nid']));
            break;
        case 'throws':
            $game_throws = get_game_throws_by_id($game_id);
            $game_throws['game_id'] = $game_id;
            $tab_markup = theme('fgrgame_throws', array('game_throws' => $game_throws, 'node' => $node, 'team_node_id' => $team_node_id['nid']));
            break;
        case 'video':
            $game_video = get_game_video_by_id($game_id);
            $game_video['game_id'] = $game_id;
            $tab_markup = theme('fgrgame_video', array('game_video' => $game_video, 'node' => $node, 'team_node_id' => $team_node_id['nid']));
            break;
        case 'online':
            $tab_markup = theme('fgrgame_online', array('node' => $node, 'game_id' => $game_id));
            break;
    }
    return $tab_markup;
}

/**
 * Implements hook_theme();
*/
function fgrgame_theme() {
    return array(
        'fgrgame_before' => array(
            'variables' => array('game' => NULL, 'node' => NULL, 'team_node_id' => NULL, 'crumbs' => NULL),
            'template' => 'templates/fgrgame-before',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_current' => array(
            'variables' => array('game' => NULL, 'node' => NULL, 'team_node_id' => NULL, 'crumbs' => NULL),
            'template' => 'templates/fgrgame-current',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_ended' => array(
            'variables' => array('game' => NULL, 'node' => NULL, 'team_node_id' => NULL, 'crumbs' => NULL),
            'template' => 'templates/fgrgame-ended',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_info' => array(
            'variables' => array('game_info' => NULL, 'node' => NULL),
            'template' => 'templates/fgrgame-info',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_statistics' => array(
            'variables' => array('game_statistics' => NULL, 'node' => NULL),
            'template' => 'templates/fgrgame-statistics',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_throws' => array(
            'variables' => array('game_throws' => NULL, 'node' => NULL),
            'template' => 'templates/fgrgame-throws',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_video' => array(
            'variables' => array('game_video' => NULL, 'node' => NULL),
            'template' => 'templates/fgrgame-video',
            'file' => 'fgrgame.pages.inc',
        ),
        'fgrgame_online' => array(
            'variables' => array('game_id' => NULL, 'node' => NULL),
            'template' => 'templates/fgrgame-online',
            'file' => 'fgrgame.pages.inc',
        )
    );
}

function age_from_string_time($birthdayDate) {
    $date = new DateTime($birthdayDate);
    $now = new DateTime();
    $interval = $now->diff($date);
    return $interval->y;
}
